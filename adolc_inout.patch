diff --git a/ADOL-C/src/adouble.cpp b/ADOL-C/src/adouble.cpp
index 005432b..4249a26 100644
--- a/ADOL-C/src/adouble.cpp
+++ b/ADOL-C/src/adouble.cpp
@@ -424,7 +424,8 @@ adouble& adouble::operator = ( const adub& a ) {
 std::ostream& operator << ( std::ostream& out, const badouble& y ) {
     ADOLC_OPENMP_THREAD_NUMBER;
     ADOLC_OPENMP_GET_THREAD_NUMBER;
-    return out << ADOLC_GLOBAL_TAPE_VARS.store[y.loc()] << "(a)" ;
+   // return out << ADOLC_GLOBAL_TAPE_VARS.store[y.loc()] << "(a)" ;
+    return out << ADOLC_GLOBAL_TAPE_VARS.store[y.loc()] ;
 }
 
 /*--------------------------------------------------------------------------*/
@@ -434,24 +435,24 @@ std::istream& operator >> ( std::istream& in, const badouble& y ) {
     ADOLC_OPENMP_THREAD_NUMBER;
     ADOLC_OPENMP_GET_THREAD_NUMBER;
     in >> coval;
-    if (ADOLC_CURRENT_TAPE_INFOS.traceFlag) { // old: write_assign_d(y.loc(),coval);
-        if (coval == 0) {
-            put_op(assign_d_zero);
-            ADOLC_PUT_LOCINT(y.loc());   // = res
-        } else
-            if (coval == 1.0) {
-                put_op(assign_d_one);
-                ADOLC_PUT_LOCINT(y.loc()); // = res
-            } else {
-                put_op(assign_d);
-                ADOLC_PUT_LOCINT(y.loc());   // = res
-                ADOLC_PUT_VAL(coval);         // = coval
-            }
-
-        ++ADOLC_CURRENT_TAPE_INFOS.numTays_Tape;
-        if (ADOLC_CURRENT_TAPE_INFOS.keepTaylors)
-            ADOLC_WRITE_SCAYLOR(ADOLC_GLOBAL_TAPE_VARS.store[y.loc()]);
-    }
+//    if (ADOLC_CURRENT_TAPE_INFOS.traceFlag) { // old: write_assign_d(y.loc(),coval);
+//        if (coval == 0) {
+//            put_op(assign_d_zero);
+//            ADOLC_PUT_LOCINT(y.loc());   // = res
+//        } else
+//            if (coval == 1.0) {
+//                put_op(assign_d_one);
+//                ADOLC_PUT_LOCINT(y.loc()); // = res
+//            } else {
+//                put_op(assign_d);
+//                ADOLC_PUT_LOCINT(y.loc());   // = res
+//                ADOLC_PUT_VAL(coval);         // = coval
+//            }
+
+//        ++ADOLC_CURRENT_TAPE_INFOS.numTays_Tape;
+//        if (ADOLC_CURRENT_TAPE_INFOS.keepTaylors)
+//            ADOLC_WRITE_SCAYLOR(ADOLC_GLOBAL_TAPE_VARS.store[y.loc()]);
+//    }
 
     ADOLC_GLOBAL_TAPE_VARS.store[y.loc()] = coval;
     return in;
diff --git a/ADOL-C/src/adouble_tl.cpp b/ADOL-C/src/adouble_tl.cpp
index 75c1a14..989e2a6 100644
--- a/ADOL-C/src/adouble_tl.cpp
+++ b/ADOL-C/src/adouble_tl.cpp
@@ -43,37 +43,40 @@ size_t refcounter::refcnt = 0;
 /*******************  i/o operations  ***************************************/
 ostream& operator << ( ostream& out, const adouble& a) {
     if (likely(adouble::_do_val() && adouble::_do_adval())) {
-	out << "Value: " << a.val;
-	out << " ADValues (" << adouble::numDir << "): ";
-	FOR_I_EQ_0_LT_NUMDIR
-	    out << a.ADVAL_I << " ";
-	out << "(a)";
+//	out << "Value: " << a.val;
+//	out << " ADValues (" << adouble::numDir << "): ";
+//	FOR_I_EQ_0_LT_NUMDIR
+//	    out << a.ADVAL_I << " ";
+//	out << "(a)";
+      out << a.val;
     }
     return out;
 }
 
 istream& operator >> ( istream& in, adouble& a) {
     if(likely(adouble::_do_val() && adouble::_do_adval())) {
-	char c;
-	do in >> c;
-	while (c!=':' && !in.eof());
-	in >> a.val;
-	unsigned int num;
-	do in >> c;
-	while (c!='(' && !in.eof());
-	in >> num;
-	if (num>adouble::numDir)
-	{
-	    cout << "ADOL-C error: to many directions in input\n";
-	    adolc_exit(-1,"",__func__,__FILE__,__LINE__);
-	}
-	do in >> c;
-	while (c!=':' && !in.eof());
-	FOR_I_EQ_0_LT_NUMDIR
-	    in >> a.ADVAL_I;
-	do in >> c;
-	while (c!=')' && !in.eof());
-	return in;
+//	char c;
+//	do in >> c;
+//	while (c!=':' && !in.eof());
+//	in >> a.val;
+//	unsigned int num;
+//	do in >> c;
+//	while (c!='(' && !in.eof());
+//	in >> num;
+//	if (num>adouble::numDir)
+//	{
+//	    cout << "ADOL-C error: to many directions in input\n";
+//	    adolc_exit(-1,"",__func__,__FILE__,__LINE__);
+//	}
+//	do in >> c;
+//	while (c!=':' && !in.eof());
+//	FOR_I_EQ_0_LT_NUMDIR
+//	    in >> a.ADVAL_I;
+//	do in >> c;
+//	while (c!=')' && !in.eof());
+//	return in;
+      in >> a.val;
+      return in;
     }
     return in;
 }
