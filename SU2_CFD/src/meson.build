su2_cfd_src = files(['driver_adjoint_singlezone.cpp',
                     'solver_direct_transition.cpp',
                     'solver_adjoint_turbulent.cpp',
                     'integration_structure.cpp',
                     'solver_direct_mean_fem.cpp',
                     'numerics_adjoint_mean.cpp',
                     'transport_model.cpp',
                     'variable_direct_turbulent.cpp',
                     'numerics_adjoint_turbulent.cpp',
                     'variable_direct_transition.cpp',
                     'fluid_model_pvdw.cpp',
                     'variable_direct_elasticity.cpp',
                     'integration_time.cpp',
                     'fluid_model_pig.cpp',
                     'solver_direct_mean.cpp',
                     'iteration_structure.cpp',
                     'variable_template.cpp',
                     'fluid_model_inc.cpp',
                     'solver_adjoint_mean.cpp',
                     'driver_structure.cpp',
                     'variable_adjoint_turbulent.cpp',
                     'variable_adjoint_discrete.cpp',
                     'variable_structure.cpp',
                     'driver_direct_multizone.cpp',
                     'solver_adjoint_elasticity.cpp',
                     'solver_structure.cpp',
                     'numerics_direct_transition.cpp',
                     'solver_template.cpp',
                     'variable_direct_mean_inc.cpp',
                     'solver_direct_elasticity.cpp',
                     'definition_structure.cpp',
                     'numerics_direct_mean_inc.cpp',
                     'transfer_physics.cpp',
                     'data_manufactured_solutions.cpp',
                     'variable_adjoint_mean.cpp',
                     'solver_direct_turbulent.cpp',
                     'fluid_model.cpp',
                     'solver_direct_mean_inc.cpp',
                     'numerics_direct_mean.cpp',
                     'solver_direct_heat.cpp',
                     'variable_direct_heat.cpp',
                     'numerics_direct_heat.cpp',
                     'fluid_model_ppr.cpp',
                     'numerics_direct_elasticity.cpp',
                     'variable_direct_mean.cpp',
                     'driver_direct_singlezone.cpp',
                     'numerics_direct_turbulent.cpp',
                     'numerics_direct_elasticity_linear.cpp',
                     'python_wrapper_structure.cpp',
                     'numerics_structure.cpp',
                     'numerics_template.cpp',
                     'transfer_structure.cpp',
                     'solver_adjoint_discrete.cpp',
                     'numerics_direct_elasticity_nonlinear.cpp',
                     'variable_adjoint_elasticity.cpp',
                     'SU2_CFD.cpp'])

su2_cfd_src += files(['output/output_adj_elasticity.cpp',
                      'output/output_adj_flow_comp.cpp',
                      'output/output_adj_flow_inc.cpp',
                      'output/output_adj_heat.cpp',
                      'output/output_baseline.cpp',
                      'output/output_cgns.cpp',
                      'output/output_csv.cpp',
                      'output/output_driver.cpp',
                      'output/output_elasticity.cpp',
                      'output/output_fieldview.cpp',
                      'output/output_flow_comp.cpp',
                      'output/output_flow_comp_fem.cpp',
                      'output/output_flow.cpp',
                      'output/output_flow_inc.cpp',
                      'output/output_heat.cpp',
                      'output/output_mesh.cpp',
                      'output/output_paraview.cpp',
                      'output/output_physics.cpp',
                      'output/output_structure.cpp',
                      'output/output_structure_legacy.cpp',
                      'output/output_su2.cpp',
                      'output/output_tecplot.cpp'])


su2_cfd = executable('SU2_CFD',
                     su2_cfd_src, 
		     install : true, 
		     dependencies : [su2_deps, common_dep], 
		     cpp_args:  ['-fPIC'] + [su2_cpp_args])

if get_option('enable-autodiff')
  su2_cfd_ad = executable('SU2_CFD_AD',
                          su2_cfd_src,
			  install : true, 
			  dependencies : [su2_deps, codi_dep, commonAD_dep], 
			  cpp_args: ['-fPIC'] + [su2_cpp_args, codi_rev_args])
endif

if get_option('enable-directdiff')
  su2_cfd_dd = executable('SU2_CFD_DD',
                          su2_cfd_src,
			  install : true, 
			  dependencies : [su2_deps, codi_dep, commonDD_dep], 
			  cpp_args: ['-fPIC'] + [su2_cpp_args, codi_for_args])
endif
